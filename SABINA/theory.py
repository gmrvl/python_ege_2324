# перевод числа из десятичной системы в (какую-нибудь другую)
'''
n = 74836  # десятичное число
n_2 = bin(n)[2:]
n_8 = oct(n)[2:]
n_16 = hex(n)[2:]

# перевод в ЛЮБУЮ систему счисления

x = 6437  # десятичное число
cc = 5  # система счисления в которую собираемся переводить
res = ''

while x != 0:
    res = str(x % cc) + res
    x //= cc

x % 5  # берет остаток от деления на 5
x / 5  # обычное деление с дробной частью
x // 5  # целочисленное деление

x = x + 1  # x += 1
x = x // 5  # x //= 5

# операторы
x = 1  # присвоение
x == 1 # проверяем равны ли х и 1
x != 1 # проверяем на неравенство
x > 1
x < 1
x >= 1
x <= 1

# перевод числа в строку и строку в число
x = 5
x_s = str(x)
x_d = int(x_s)

# строки (Строка - это набор символов)
s = '278486dsuyeiw838//83qh'
s1 = s[0] # первый символ
s_posled = s[-1] # последний символ
s_3 = s[-3] # третий с конца
s_23 = s[1:3] # срез - кусок строки с 2-го по 3-й символ

#-----------------
# max() - функция, которая ищет максимум (min() - ищет минимум)
max(1, 34, 33, 3413)

# как проверить есть ли в строке подстрока
s = '382973977792837888777'
x = '777'
if x in s:
    print('YES')
else:
    print('NO')
'''


# all(), any()-----------------------------------------------------------------------------------------------------------
a = [1,3,5]
b = [2,4,6]
c = [1,2,3,4,5]
if all(x % 2 == 0 for x in b): # проверка всех(all()) элементов массива были четные
    print('okay')              # внутри функции all создадим генератор списков с условием, что поступающие значения четные

word = 'ВАЛЕРА'
if any(s in word for s in ['АЛ', 'АР', 'АП', 'АМ', 'АН', 'АД']): #если есть хотя бы одна из комбинаций в слове ВАЛЕРА, то ok
    print('ok')                                                  # строка: если в s есть внутри слова, и s перебирается по слогам, то вывод или не вывод ok




# конструкция for-else--------------------------------------------------------------------------------------------------

a = [17,5,2,24]
f = [1,2,3,4,5]
for x in a:
    if x % 2 == 0:
        break      # проверка через фор, если в массиве\строке, по которой идет х имеет четные числа, то ничего не выводится
else:
    print('ура')   # если в массиве\строке нет четных, то функция пройдет через else и выведет ура

for x in a:   # проверка содержания элементов а в массиве f
    if x in f:
        break  # если есть совпадения, то брейк
else:
    print('ok') # если нет совпадений, то принт



#    функция map()---------------------------------------------------------------------------------------------------------

# итеративный объект - это какой-то тип данных, у которого есть элементы (они пронумерованы и у них есть порядок)
# map  совершает действие над каждым итеративным объектом
a = '17245622'
b = bin(1542)[2:]

def f(x):
    return int(x) + 2
z = list(map(f,a))    # с помощью map мы используем каждую цифру строки а и проносим через функцию f
print(z)

x = sum(map(int, a)) # map превращает символы строки в целое число и находит сумму строки
y = sum(map(int, b)) # также, как выше
print(x)

# создание массива, используя файл, как в 9 задании
s = list(map(int,f.split()))

#
a = '17245622'
def kr2(x):
    return int(x) % 2 == 0
rr = list(map(kr2,a)).count(1)  # к массиву ф применится функция kr2  и произойдет проверка условия
print(f'{rr=}')
